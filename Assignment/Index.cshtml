@{
    ViewData["Title"] = "Dashboard";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

<div class="container my-5">

    <!-- ================= Students ================= -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="text-primary"><i class="bi bi-people"></i> Student List</h2>
        <button id="addStudentBtn" class="btn btn-success"><i class="bi bi-person-plus"></i> Add Student</button>
    </div>

    <div class="card shadow-lg p-4 mb-5">
        <div class="d-flex justify-content-between mb-3">
            <button id="loadStudentsBtn" class="btn btn-primary"><i class="bi bi-arrow-clockwise"></i> Load Students</button>

            <div class="d-flex align-items-center">
                <label class="me-2 fw-semibold text-secondary">Filter by Name:</label>
                <select id="studentDropdown" class="form-select" style="width: 200px;">
                    <option value="">-- Select Name --</option>
                </select>
            </div>
        </div>

        <div id="students" class="table-responsive"></div>
    </div>

    <!-- ================= Courses ================= -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="text-success"><i class="bi bi-journal-bookmark"></i> Course List</h2>
        <button id="addCourseBtn" class="btn btn-success"><i class="bi bi-plus-circle"></i> Add Course</button>
    </div>

    <div class="card shadow-lg p-4">
        <div class="d-flex justify-content-between mb-3">
            <button id="loadCoursesBtn" class="btn btn-primary"><i class="bi bi-arrow-clockwise"></i> Load Courses</button>
        </div>
        <div id="courses" class="table-responsive"></div>
    </div>
</div>

<!-- ================= Student Modal ================= -->
<div class="modal fade" id="studentModal" tabindex="-1" aria-labelledby="studentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="studentModalLabel">Add / Edit Student</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="studentForm">
                    <input type="hidden" id="studentId" />
                    <div class="mb-3"><label class="form-label fw-semibold">Roll Number</label><input type="text" id="rollNumber" class="form-control" required /></div>
                    <div class="mb-3"><label class="form-label fw-semibold">Full Name</label><input type="text" id="name" class="form-control" required /></div>
                    <div class="mb-3"><label class="form-label fw-semibold">Email</label><input type="email" id="email" class="form-control" /></div>
                    <div class="mb-3"><label class="form-label fw-semibold">Phone</label><input type="text" id="phone" class="form-control" maxlength="15" /></div>
                    <div class="mb-3"><label class="form-label fw-semibold">Address</label><input type="text" id="address" class="form-control" /></div>
                    <div class="mb-3"><label class="form-label fw-semibold">Date of Birth</label><input type="date" id="dateOfBirth" class="form-control" /></div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Gender</label>
                        <select id="gender" class="form-select">
                            <option value="">Select Gender</option>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Course</label>
                        <select id="courseId" class="form-select">
                            <option value="">Select Course</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- ================= Course Modal ================= -->
<div class="modal fade" id="courseModal" tabindex="-1" aria-labelledby="courseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="courseModalLabel">Add / Edit Course</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="courseForm">
                    <input type="hidden" id="courseId" />
                    <div class="mb-3"><label class="form-label fw-semibold">Course Code</label><input type="text" id="courseCode" class="form-control" required /></div>
                    <div class="mb-3"><label class="form-label fw-semibold">Course Name</label><input type="text" id="courseName" class="form-control" required /></div>
                    <div class="mb-3"><label class="form-label fw-semibold">Department</label><input type="text" id="department" class="form-control" /></div>
                    <div class="mb-3"><label class="form-label fw-semibold">Semester</label><input type="number" id="semester" class="form-control" min="1" /></div>
                    <button type="submit" class="btn btn-success w-100">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- ================= JS ================= -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    let studentsData = [];
    let coursesData = [];
    let currentPage = 1;
    const pageSize = 5;
    const token = localStorage.getItem("jwtToken");
    const apiBase = "https://localhost:7164/api";

    if (!token) {
        alert("Please login first!");
        window.location.href = "/Auth/Login";
    }

    // ================= STUDENTS =================
    $("#loadStudentsBtn").click(loadAllStudents);
    $("#addStudentBtn").click(() => {
        $("#studentForm")[0].reset();
        $("#studentId").val("");
        $("#studentModal").modal("show");
    });

    function loadAllStudents() {
        $.ajax({
            url: apiBase + "/Student",
            type: "GET",
            headers: { "Authorization": "Bearer " + token },
            success: function (data) {
                studentsData = data;
                currentPage = 1;
                populateStudentDropdown(data);
                renderStudentTable();
            },
            error: function () {
                $("#students").html("<p class='text-danger'>Error fetching students.</p>");
            }
        });
    }

    function populateStudentDropdown(data) {
        let options = "<option value=''>-- Select Name --</option>";
        data.forEach(s => options += `<option value='${s.name}'>${s.name}</option>`);
        $("#studentDropdown").html(options);
        populateCourseDropdown();
    }

    function populateCourseDropdown() {
        let options = "<option value=''>Select Course</option>";
        coursesData.forEach(c => options += `<option value='${c.courseId}'>${c.courseName}</option>`);
        $("#courseId").html(options);
    }

    $("#studentDropdown").change(function () {
        const name = $(this).val();
        currentPage = 1;
        if (!name) return renderStudentTable();

        $.ajax({
            url: apiBase + `/Student/ByName/${encodeURIComponent(name)}`,
            type: "GET",
            headers: { "Authorization": "Bearer " + token },
            success: function (data) {
                studentsData = Array.isArray(data) ? data : [data];
                renderStudentTable();
            },
            error: function () {
                $("#students").html("<p class='text-danger'>No student found with that name.</p>");
            }
        });
    });

    function renderStudentTable() {
        if (!studentsData.length) {
            $("#students").html("<p class='text-muted'>No students found.</p>");
            return;
        }

        const totalPages = Math.ceil(studentsData.length / pageSize);
        if (currentPage > totalPages) currentPage = totalPages || 1;

        const start = (currentPage - 1) * pageSize;
        const paginatedData = studentsData.slice(start, start + pageSize);

        let html = `<table class='table table-hover align-middle text-center'>
            <thead class='table-dark'>
                <tr>
                    <th>Roll</th><th>Name</th><th>Email</th><th>Phone</th>
                    <th>Address</th><th>DOB</th><th>Gender</th><th>Course</th><th>Actions</th>
                </tr>
            </thead><tbody>`;

        paginatedData.forEach(s => {
            const course = coursesData.find(c => c.courseId === s.courseId);
            html += `<tr>
                <td>${s.rollNumber ?? "-"}</td>
                <td>${s.name ?? "-"}</td>
                <td>${s.email ?? "-"}</td>
                <td>${s.phone ?? "-"}</td>
                <td>${s.address ?? "-"}</td>
                <td>${s.dateOfBirth ? new Date(s.dateOfBirth).toLocaleDateString() : "-"}</td>
                <td>${s.gender ?? "-"}</td>
                <td>${course ? course.courseName : "-"}</td>
                <td>
                    <button class='btn btn-warning btn-sm me-2 editStudentBtn' data-id='${s.studentId}'><i class='bi bi-pencil-square'></i></button>
                    <button class='btn btn-danger btn-sm' onclick='deleteStudent(${s.studentId})'><i class='bi bi-trash'></i></button>
                </td>
            </tr>`;
        });

        html += `</tbody></table>`;
        html += `<div class='d-flex justify-content-between align-items-center mt-3'>
            <button class='btn btn-outline-primary btn-sm' id='prevPage' ${currentPage===1?"disabled":""}>
                <i class='bi bi-arrow-left'></i> Prev
            </button>
            <span class='fw-semibold text-secondary'>Page ${currentPage} of ${totalPages}</span>
            <button class='btn btn-outline-primary btn-sm' id='nextPage' ${currentPage===totalPages?"disabled":""}>
                Next <i class='bi bi-arrow-right'></i>
            </button>
        </div>`;

        $("#students").html(html);

        $("#prevPage").click(() => { if (currentPage > 1) { currentPage--; renderStudentTable(); } });
        $("#nextPage").click(() => { if (currentPage < totalPages) { currentPage++; renderStudentTable(); } });

        $(".editStudentBtn").click(function () {
            const student = studentsData.find(s => s.studentId === $(this).data("id"));
            $("#studentId").val(student.studentId);
            $("#rollNumber").val(student.rollNumber);
            $("#name").val(student.name);
            $("#email").val(student.email);
            $("#phone").val(student.phone);
            $("#address").val(student.address);
            $("#dateOfBirth").val(student.dateOfBirth?.split("T")[0]);
            $("#gender").val(student.gender);
            $("#courseId").val(student.courseId);
            $("#studentModal").modal("show");
        });
    }

    $("#studentForm").submit(function(e){
        e.preventDefault();
        const id = parseInt($("#studentId").val());
        const student = {
            studentId: id || 0,
            rollNumber: $("#rollNumber").val(),
            name: $("#name").val(),
            email: $("#email").val(),
            phone: $("#phone").val(),
            address: $("#address").val(),
            dateOfBirth: $("#dateOfBirth").val(),
            gender: $("#gender").val(),
            courseId: parseInt($("#courseId").val()) || null
        };

        const method = student.studentId > 0 ? "PUT" : "POST";
        const url = apiBase + "/Student" + (student.studentId > 0 ? `/${student.studentId}` : "");

        $.ajax({
            url, type: method, headers: { "Authorization": "Bearer " + token },
            contentType: "application/json", data: JSON.stringify(student),
            success: function(){
                $("#studentModal").modal("hide");
                loadAllStudents();
            },
            error: function(xhr){ alert("Error saving student: " + xhr.responseText); }
        });
    });

    function deleteStudent(id){
        if(!confirm("Delete this student?")) return;
        $.ajax({
            url: apiBase + `/Student/${id}`, type: "DELETE",
            headers: { "Authorization": "Bearer " + token },
            success: loadAllStudents
        });
    }

    // ================= COURSES =================
    $("#loadCoursesBtn").click(loadAllCourses);
    $("#addCourseBtn").click(()=>{ 
        $("#courseForm")[0].reset();
        $("#courseId").val("");
        $("#courseModal").modal("show");
    });

    function loadAllCourses(){
        $.ajax({
            url: apiBase + "/Course",
            type: "GET",
            headers: { "Authorization": "Bearer " + token },
            success: function(data){
                coursesData = data;
                renderCourseTable();
                populateCourseDropdown();
            },
            error: ()=>$("#courses").html("<p class='text-danger'>Error fetching courses.</p>")
        });
    }

    function renderCourseTable(){
        if(!coursesData.length){
            $("#courses").html("<p class='text-muted'>No courses found.</p>");
            return;
        }

        let html = `<table class='table table-hover align-middle text-center'>
            <thead class='table-success'>
                <tr><th>Code</th><th>Name</th><th>Department</th><th>Semester</th><th>Actions</th></tr>
            </thead><tbody>`;

        coursesData.forEach(c=>{
            html += `<tr>
                <td>${c.courseCode ?? "-"}</td>
                <td>${c.courseName ?? "-"}</td>
                <td>${c.department ?? "-"}</td>
                <td>${c.semester ?? "-"}</td>
                <td>
                    <button class='btn btn-warning btn-sm me-2 editCourseBtn' data-id='${c.courseId}'><i class='bi bi-pencil-square'></i></button>
                    <button class='btn btn-danger btn-sm' onclick='deleteCourse(${c.courseId})'><i class='bi bi-trash'></i></button>
                </td>
            </tr>`;
        });

        html += "</tbody></table>";
        $("#courses").html(html);

        $(".editCourseBtn").click(function(){
            const course = coursesData.find(c=>c.courseId=== $(this).data("id"));
            $("#courseId").val(course.courseId);
            $("#courseCode").val(course.courseCode);
            $("#courseName").val(course.courseName);
            $("#department").val(course.department);
            $("#semester").val(course.semester);
            $("#courseModal").modal("show");
        });
    }

    $("#courseForm").submit(function(e){
        e.preventDefault();
        const id = parseInt($("#courseId").val());
        const course = {
            courseId: id || 0,
            courseCode: $("#courseCode").val(),
            courseName: $("#courseName").val(),
            department: $("#department").val(),
            semester: parseInt($("#semester").val()) || null,
            students: []
        };
        const method = course.courseId > 0 ? "PUT" : "POST";
        const url = apiBase + "/Course" + (course.courseId > 0 ? `/${course.courseId}` : "");

        $.ajax({
            url, type: method, headers: { "Authorization": "Bearer " + token },
            contentType: "application/json", data: JSON.stringify(course),
            success: function(){
                $("#courseModal").modal("hide");
                loadAllCourses();
            },
            error: function(xhr){ alert("Error saving course: " + xhr.responseText); }
        });
    });

    function deleteCourse(id){
        if(!confirm("Delete this course?")) return;
        $.ajax({
            url: apiBase + `/Course/${id}`, type: "DELETE",
            headers: { "Authorization": "Bearer " + token },
            success: loadAllCourses
        });
    }

    // Load both sections on page ready
    $(document).ready(function(){
        loadAllCourses();
        loadAllStudents();
    });
</script>
